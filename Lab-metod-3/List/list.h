/*!
 *\file
 *\brief Заголовочный файл с описанием класса
 
 *Данный файл содержит в себе определение
 класса структуры данных - односвязный список
 */

#pragma once

#include <iostream>

/*!
 *\brief Класс - односвязный список
 
 *Данный класс описывает методы структуры данных - односвязный список
 */

class list {
public:
    /*!
     *Конструктор класса по - умолчанию
     */
    
    list();
    /*!
     *Конструктор копирования
     *\param[in] copy Копируемый объект
     */
    
    list(const list&);
    /*!
     *Добавляет элемент в очередь
     *\param[in] index Индекс нового элемента
     *\param[in] data Значение нового элемента
     */
    
    void add(const std::size_t, const int);
    /*!
     *Добавляет элемент в очередь
     *\param[in] index Индекс удаляемого элемента
     */
    
    void del(const std::size_t);
    /*!
     *Добавляет элемент в очередь
     *\param[in] index Индекс получаемого элемента
     */
    
    int get(const std::size_t) const;
    /*!
     *Деструктор класса. Очищает список.
     */
    
    ~list();
private:
    /*!
     *\brief Структура - узел
     
     *Данная структура хранит данные и
     указатель на следующий узел списка
     */
    
    struct node {
        /*!
         *Конструктор структуры
         *\param[in] data Значение нового элемента списка
         */
        
        node(const int data)
        :_data(data), _pnext(nullptr) {}
        /*!
         *Деструктор структуры
         */
        
        ~node() = default;
        
        int _data; /*!< Значение элемента */
        node *_pnext; /*!< Указатель на следующщий узел */
    };
    
    node *head_; /*!< Указатель на первый узел списка */
};